# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mentore.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from mentorePalette import mentorePaletteSetter
import addConcept



class MainWindow(QtWidgets.QMainWindow):

    def __init__(self):
        super(MainWindow, self).__init__()

        self.setObjectName("MainWindow")
        self.resize(800, 600)

        palette = QtGui.QPalette()
        palette = mentorePaletteSetter(palette)
        self.setPalette(palette)

        self.centralwidget = QtWidgets.QWidget()
        self.centralwidget.setObjectName("centralwidget")
        self.ontologyLabel = QtWidgets.QLabel(self.centralwidget)
        self.ontologyLabel.setGeometry(QtCore.QRect(170, 90, 431, 111))
        self.ontologyLabel.setObjectName("ontologyLabel")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(320, 340, 160, 106))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.additionsBox = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.additionsBox.setContentsMargins(0, 0, 0, 0)
        self.additionsBox.setObjectName("additionsBox")
        self.addConcept_pb = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.addConcept_pb.setObjectName("addConcept_pb")
        self.additionsBox.addWidget(self.addConcept_pb)
        self.addSentence_pb = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.addSentence_pb.setObjectName("addSentence_pb")
        self.additionsBox.addWidget(self.addSentence_pb)
        self.addQuestion_pb = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.addQuestion_pb.setObjectName("addQuestion_pb")
        self.additionsBox.addWidget(self.addQuestion_pb)
        self.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar()
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 26))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        self.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar()
        self.statusbar.setObjectName("statusbar")
        self.setStatusBar(self.statusbar)
        self.actionOpen_ontology = QtWidgets.QAction()
        self.actionOpen_ontology.setObjectName("actionOpen_ontology")
        self.actionExit = QtWidgets.QAction()
        self.actionExit.setObjectName("actionExit")
        self.menuFile.addAction(self.actionOpen_ontology)
        self.menuFile.addAction(self.actionExit)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi()
        QtCore.QMetaObject.connectSlotsByName(self)

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("MainWindow", "Mentore"))
        self.ontologyLabel.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:10pt;\">TODO here goes the name of the opened ontology</span></p></body></html>"))
        self.addConcept_pb.setText(_translate("MainWindow", "Add concept"))
        self.addSentence_pb.setText(_translate("MainWindow", "Add sentence"))
        self.addQuestion_pb.setText(_translate("MainWindow", "Add question"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.actionOpen_ontology.setText(_translate("MainWindow", "Open ontology"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))

        self.setWindowIcon(QtGui.QIcon('images/robot_logo2.svg'))

        self.connect_events()

    def connect_events(self):

        # Add concept push button
        #conceptDialog = addConcept.addConceptDialog()
        #self.addConcept_pb.clicked.connect(lambda: conceptDialog.exec())
        self.addConcept_pb.clicked.connect(lambda: addConcept.addConceptDialog().exec())

        # Add sentence push button
        #self...

        # Add question push button
        #self...


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    mentoreWindow = MainWindow()

    mentoreWindow.show()
    sys.exit(app.exec_())
